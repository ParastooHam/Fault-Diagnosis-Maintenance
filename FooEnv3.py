# -*- coding: utf-8 -*-
"""FooEnv3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T8QeBJdFV9gZdONXyuVuuN3A5Becty5g
"""

import sys
from contextlib import closing
import numpy as np
from io import StringIO
from gym import utils
from gym.envs.toy_text import discrete

class FooEnv3(object):
    def __init__(self,real_time):
        self.real_time=real_time
        nA = 3
        nS = 3
    def inc(self,s, a, real_time):
      time=self.real_time
      self.real_time=time
      trans=[[0.94533, 0.05452, 0.00015],
                       [0.1324, 0.8292, 0.03840],
                       [0.04433, 0.04159, 0.91408]]
      s = np.random.choice(3,1, p=trans[s][:])[0]
      return s

    def update_probability_matrix(self, s, action,real_time):
      newstate= self.inc(s, action,real_time)
      time=self.real_time
      if time <=399:
        if action == 0:
          reward = 0
          done= False
        elif action == 1:
          reward = -20
          done= False              
        elif action == 2:
          reward = -25
          done= False 
      elif time >=399:
        reward = 0
        done= True 
      return newstate, reward, done



